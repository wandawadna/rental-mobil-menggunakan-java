import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import Database.KoneksiDatabasee;
//import Database.ResultSetTable;
import java.awt.HeadlessException;
import java.sql.PreparedStatement;

public class Form_Transaksi extends javax.swing.JInternalFrame {

    ResultSet r;
    KoneksiDatabase con;
    static String nama;
    static String nik;
    static String alamat;
    static String tlp;
    static String email;
    String status1;
    private DefaultTableModel model;

    public Form_Transaksi(String nama, String nik, String alamat, String tlp, String email) {
//        con = new KoneksiDatabase(new Database.Parameter().HOST_DB, new Database.Parameter().USERNAME_DB, new Database.Parameter().PASSWORD_DB);

        initComponents();
        model = new DefaultTableModel();
        table_transaksi.setModel(model);
        model.addColumn("Nama Peminjam");
        model.addColumn("No Polisi");
        model.addColumn("Harga");
        model.addColumn("Tgl Pinjam");
        model.addColumn("Tgl Kembali");
        model.addColumn("lama Pinjam");
        model.addColumn("Total");
        
         
        lblNama.setText(nama);
        lblNik.setText(nik);
        lbl_alamat.setText(alamat);
        lbl_tlp.setText(tlp);
        lbl_email.setText(email);
        loadMobil();
        loadTabel();


    }

//    Form_Transaksi(String nama, String alamat, String tlp, String email) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGlass1 = new usu.widget.glass.PanelGlass();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lblNama = new javax.swing.JLabel();
        lbl_alamat = new javax.swing.JLabel();
        lbl_tlp = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblNik = new javax.swing.JLabel();
        panelGlass3 = new usu.widget.glass.PanelGlass();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_lama = new javax.swing.JTextField();
        txt_total = new javax.swing.JLabel();
        btn_Refresh__addItem = new usu.widget.ButtonGlass();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        panelGlass2 = new usu.widget.glass.PanelGlass();
        boxnopol = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        lbl_merek = new javax.swing.JLabel();
        lbl_tipe = new javax.swing.JLabel();
        lbl_tahun = new javax.swing.JLabel();
        lbl_harga = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        lbl_status = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_transaksi = new javax.swing.JTable();
        btn_Refresh__addItem1 = new usu.widget.ButtonGlass();
        btn_create_addItem = new usu.widget.ButtonGlass();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelGlass1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Data Peminjam");
        panelGlass1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nama");
        panelGlass1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 48, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Alamat");
        panelGlass1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 48, -1));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("No. Tlp");
        panelGlass1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 141, -1, -1));

        jLabel23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText(":");
        panelGlass1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 16, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText(":");
        panelGlass1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 14, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(":");
        panelGlass1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 14, -1));

        jLabel24.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Email");
        panelGlass1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        jLabel25.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText(":");
        panelGlass1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 16, -1));

        lblNama.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNama.setForeground(new java.awt.Color(255, 255, 255));
        lblNama.setText("Nama");
        panelGlass1.add(lblNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 79, -1));

        lbl_alamat.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_alamat.setForeground(new java.awt.Color(255, 255, 255));
        lbl_alamat.setText("Alamat");
        panelGlass1.add(lbl_alamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 60, 47));

        lbl_tlp.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_tlp.setForeground(new java.awt.Color(255, 255, 255));
        lbl_tlp.setText("No. Tlp");
        panelGlass1.add(lbl_tlp, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 142, 100, -1));

        lbl_email.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_email.setForeground(new java.awt.Color(255, 255, 255));
        lbl_email.setText("Email");
        panelGlass1.add(lbl_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 201, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("NIK");
        panelGlass1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 48, -1));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText(":");
        panelGlass1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 44, 14, -1));

        lblNik.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNik.setForeground(new java.awt.Color(255, 255, 255));
        lblNik.setText("Nik");
        panelGlass1.add(lblNik, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 79, -1));

        getContentPane().add(panelGlass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 290, 240));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Tgl  Peminjaman");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Lama Peminjaman");

        jLabel32.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Tgl Pengembalian");

        jLabel37.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText(":");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(":");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText(":");

        txt_total.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txt_total.setForeground(new java.awt.Color(255, 0, 0));
        txt_total.setText("Total");

        btn_Refresh__addItem.setForeground(new java.awt.Color(255, 255, 255));
        btn_Refresh__addItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-calculator-35.png"))); // NOI18N
        btn_Refresh__addItem.setText("Hitung");
        btn_Refresh__addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Refresh__addItemActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("RP");
        jLabel40.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel41.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("Hari");

        javax.swing.GroupLayout panelGlass3Layout = new javax.swing.GroupLayout(panelGlass3);
        panelGlass3.setLayout(panelGlass3Layout);
        panelGlass3Layout.setHorizontalGroup(
            panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGlass3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGlass3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_lama, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel41)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelGlass3Layout.createSequentialGroup()
                        .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelGlass3Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(btn_Refresh__addItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelGlass3Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelGlass3Layout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(63, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGlass3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        panelGlass3Layout.setVerticalGroup(
            panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGlass3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jLabel16))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37)
                        .addComponent(jLabel32))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGlass3Layout.createSequentialGroup()
                        .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17)
                            .addComponent(txt_lama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGlass3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel41)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Refresh__addItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelGlass3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_total)
                    .addComponent(jLabel40))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        getContentPane().add(panelGlass3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 320, 240));

        boxnopol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxnopolActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Merek Mobil");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("No. Polisi");

        jLabel27.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Tipe Mobil");

        jLabel29.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Tahun Mobil");

        jLabel30.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText(":");

        jLabel31.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText(":");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText(":");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(":");

        jLabel33.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Harga (/hari)");

        jLabel34.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText(":");

        lbl_merek.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_merek.setForeground(new java.awt.Color(255, 255, 255));
        lbl_merek.setText("lbl_merek");

        lbl_tipe.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_tipe.setForeground(new java.awt.Color(255, 255, 255));
        lbl_tipe.setText("lbl_tipe");

        lbl_tahun.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_tahun.setForeground(new java.awt.Color(255, 255, 255));
        lbl_tahun.setText("lbl_tahun");

        lbl_harga.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_harga.setForeground(new java.awt.Color(255, 255, 255));
        lbl_harga.setText("lbl_harga");

        jLabel36.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Status");

        lbl_status.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_status.setForeground(new java.awt.Color(255, 255, 255));
        lbl_status.setText("status");

        jLabel38.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText(":");

        javax.swing.GroupLayout panelGlass2Layout = new javax.swing.GroupLayout(panelGlass2);
        panelGlass2.setLayout(panelGlass2Layout);
        panelGlass2Layout.setHorizontalGroup(
            panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGlass2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGlass2Layout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_status)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelGlass2Layout.createSequentialGroup()
                        .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel29)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGlass2Layout.createSequentialGroup()
                                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelGlass2Layout.createSequentialGroup()
                                        .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelGlass2Layout.createSequentialGroup()
                                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boxnopol, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_merek, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_tipe, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_tahun, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(189, 189, 189))
                            .addGroup(panelGlass2Layout.createSequentialGroup()
                                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        panelGlass2Layout.setVerticalGroup(
            panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGlass2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13)
                    .addComponent(boxnopol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(lbl_merek))
                .addGap(18, 18, 18)
                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel31)
                    .addComponent(lbl_tipe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(lbl_tahun))
                .addGap(18, 18, 18)
                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(lbl_harga))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelGlass2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel38)
                    .addComponent(lbl_status))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        getContentPane().add(panelGlass2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 310, -1));

        table_transaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nama Peminjam", "No Polisi", "Harga", "Tgl Pinjam", "Tgl Kembali", "Lama Pinjam", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_transaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_transaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_transaksi);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 940, 210));

        btn_Refresh__addItem1.setForeground(new java.awt.Color(255, 255, 255));
        btn_Refresh__addItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-reset-45.png"))); // NOI18N
        btn_Refresh__addItem1.setText("Cancel");
        btn_Refresh__addItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Refresh__addItem1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Refresh__addItem1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 390, 250, 80));

        btn_create_addItem.setForeground(new java.awt.Color(255, 255, 255));
        btn_create_addItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-car-rental-48.png"))); // NOI18N
        btn_create_addItem.setText("Submit");
        btn_create_addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_create_addItemActionPerformed(evt);
            }
        });
        getContentPane().add(btn_create_addItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 250, 80));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Form Transaksi Mobil");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 102));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/backOk.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, 960, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_Refresh__addItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Refresh__addItem1ActionPerformed
        int i = table_transaksi.getSelectedRow();
        if(i == -1){
        // tidak ada baris terseleksi
        return;
        }
        String nopol = (String) model.getValueAt(i, 0);
        try{
        Connection c = KoneksiDatabase.getKoneksi();
        String sql = "DELETE FROM TB_TRANSAKSI WHERE peminjam = ?";
            try (PreparedStatement p = c.prepareStatement(sql)) {
                p.setString(1, nopol);
                p.executeUpdate();
                capekygy();
//                
            }
        }catch(SQLException e){
        System.err.println("Terjadi Error");
        }finally{             
//            clear();
            loadTabel();
            
        }
    }//GEN-LAST:event_btn_Refresh__addItem1ActionPerformed

    private void btn_create_addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_create_addItemActionPerformed
       java.util.Date tgl = (java.util.Date) this.jDateChooser1.getDate();
       java.util.Date tgl1 = (java.util.Date) this.jDateChooser2.getDate();
       String peminjam = lblNama.getText(); 
       String nopol = boxnopol.getSelectedItem().toString();
       String tgl_pinjaman = new java.sql.Date(tgl.getTime()).toString();
       String tgl_kembali = new java.sql.Date(tgl1.getTime()).toString();
       String harga = lbl_harga.getText();
       String lama = txt_lama.getText();
       String total = txt_total.getText();
       try{
       Connection c = KoneksiDatabase.getKoneksi();
       String sql = "INSERT INTO TB_TRANSAKSI VALUES (id_transaksi, ?, ?, ?, ?, ?, ?, ?, NULL)";
           try (PreparedStatement p = c.prepareStatement(sql)) {
               p.setString(1, peminjam);
               p.setString(2, nopol);
               p.setString(3, harga);
               p.setString(4, tgl_pinjaman);
               p.setString(5, tgl_kembali);
               p.setString(6, lama);
               p.setString(7, total);
               p.executeUpdate();
               p.close();
           }
       }catch(SQLException e)
        { 
            JOptionPane.showMessageDialog(this, "Data isian ada yang kosong");
        }finally{
        loadTabel();
        add_peminjam();
        cekstatus();
        }
    }//GEN-LAST:event_btn_create_addItemActionPerformed

    private void boxnopolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxnopolActionPerformed
        // TODO add your handling code here:
        String st = (String) boxnopol.getSelectedItem(); 
        try {
//            String st = (String) boxnopol.getSelectedItem(); 
            Connection c = KoneksiDatabase.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM TB_MOBIL WHERE NOPOL = '" + st + "'" ;
            ResultSet rst = s.executeQuery(sql);
            while (rst.next()) {

                this.lbl_merek.setText(rst.getString("merek"));
                this.lbl_tipe.setText(rst.getString("tipe"));
                this.lbl_tahun.setText(rst.getString("tahun"));
                this.lbl_harga.setText(rst.getString("harga"));
                this.lbl_status.setText(rst.getString("status"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Form_Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_boxnopolActionPerformed

    private void btn_Refresh__addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Refresh__addItemActionPerformed
        hitungselisih();
    }//GEN-LAST:event_btn_Refresh__addItemActionPerformed

    private void table_transaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_transaksiMouseClicked
        // TODO add your handling code here:
        this.lblNama.setText(String.valueOf(table_transaksi.getValueAt(table_transaksi.getSelectedRow(),0)));
        this.lbl_merek.setText(String.valueOf(table_transaksi.getValueAt(table_transaksi.getSelectedRow(),1)));
//       this.boxnopol.getItem(String.valueOf(table_transaksi.getValueAt(table_transaksi.getSelectedRow(),0)));
//        this.txt_total.setText(String.valueOf(table_transaksi.getValueAt(table_transaksi.getSelectedRow(),0)));
//        this.lblNama.setText(String.valueOf(table_transaksi.getValueAt(table_transaksi.getSelectedRow(),0)));
//        this.lblNama.setText(String.valueOf(table_transaksi.getValueAt(table_transaksi.getSelectedRow(),0)));
    }//GEN-LAST:event_table_transaksiMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*  
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Form_Transaksi(nama, nik, alamat, tlp, email).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox boxnopol;
    private usu.widget.ButtonGlass btn_Refresh__addItem;
    private usu.widget.ButtonGlass btn_Refresh__addItem1;
    private usu.widget.ButtonGlass btn_create_addItem;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNama;
    private javax.swing.JLabel lblNik;
    private javax.swing.JLabel lbl_alamat;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_harga;
    private javax.swing.JLabel lbl_merek;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JLabel lbl_tahun;
    private javax.swing.JLabel lbl_tipe;
    private javax.swing.JLabel lbl_tlp;
    private usu.widget.glass.PanelGlass panelGlass1;
    private usu.widget.glass.PanelGlass panelGlass2;
    private usu.widget.glass.PanelGlass panelGlass3;
    private javax.swing.JTable table_transaksi;
    private javax.swing.JTextField txt_lama;
    private javax.swing.JLabel txt_total;
    // End of variables declaration//GEN-END:variables

    private void loadMobil() {  // mengambil database
         model.getDataVector().removeAllElements();
         model.fireTableDataChanged();
        
        try{
            String sql = "select * from tb_mobil WHERE STATUS = 'Tersedia'";
            Connection c = KoneksiDatabase.getKoneksi();
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                boxnopol.addItem(r.getString("nopol"));
            }

        } catch (SQLException ex) {
            Logger.getLogger(Form_Peminjam.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void hitungselisih() {
        try {
            SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
            String strDate1 = df.format(jDateChooser1.getDate());
            String strDate2 = df.format(jDateChooser2.getDate());
            Date Tanggal1 = df.parse(strDate1);
            Date Tanggal2 = df.parse(strDate2);
            long Hari1 = Tanggal1.getTime();
            long Hari2 = Tanggal2.getTime();
            long diff = Hari2 - Hari1;
            long Lama = diff / (24 * 60 * 60 * 1000);
            String Hasil = (Long.toString(Lama));
            txt_lama.setText(Hasil);

            int harga_sewa = Integer.parseInt(lbl_harga.getText()); // lbl_harga di pars ke integer
            int lama_sewa = Integer.parseInt(txt_lama.getText());   // txt_lama di pars ke integer
            int Total = harga_sewa * lama_sewa;                     // mencari total Harga
            String a = Integer.toString(Total);
            txt_total.setText(a);



        } catch (Exception a) {
            JOptionPane.showMessageDialog(this, "Masukan Tanggal Peminjaman dan Tanggal Pengembalian");
        }
    }

    private void loadTabel() {
       model.getDataVector().removeAllElements();
        // memberi tahu bahwa data telah kosong
        model.fireTableDataChanged();
try{
        Connection c = KoneksiDatabase.getKoneksi();
           try (Statement s = c.createStatement()) {
               String sql = "SELECT * FROM TB_TRANSAKSI";
               ResultSet r = s.executeQuery(sql);
               while(r.next()){
                   // lakukan penelusuran baris
                   Object[] o = new Object[7];
                   o[0] = r.getString("PEMINJAM");
                   o[1] = r.getString("NOPOL");
                   o[2] = r.getString("HARGA");
                   o[3] = r.getString("TGL_PINJAMAN");
                   o[4] = r.getString("TGL_KEMBALI");
                   o[5] = r.getString("LAMA");
                   o[6] = r.getString("TOTAL");
                   model.addRow(o);
               }
               r.close();
           }
        }catch(SQLException e){
        System.out.println("Terjadi Error");
        System.out.println(e.getMessage());
        }
    }

    private void create() {
//        try {
//
//            if (!lblNama.getText().isEmpty()) {
//
//                if (!jikakeluar()) {
//
//                    JOptionPane.showMessageDialog(this, "maaf mobil ini sedang tidak tersedia");
//                } else {
//                    java.util.Date tgl = (java.util.Date) this.jDateChooser1.getDate();
//                    java.util.Date tgl1 = (java.util.Date) this.jDateChooser2.getDate();
//                    String peminjam = lblNama.getText(); 
//                    String  nopol = boxnopol.getSelectedItem().toString();
//                    String tgl_pinjaman = new java.sql.Date(tgl.getTime()).toString();
//                    String tgl_kembali = new java.sql.Date(tgl1.getTime()).toString();
//                    String harga = lbl_harga.getText();
//                    String lama = txt_lama.getText();
//                    String total = txt_total.getText();
//         
//                    Connection c = KoneksiDatabase.getKoneksi();
//                    String sql = "INSERT INTO TB_TRANSAKSI VALUES (id_transaksi, ?, ?, ?, ?, ?, ?, ?)";
//                    PreparedStatement p = c.prepareStatement(sql);
//                        p.setString(1, peminjam);
//                        p.setString(2, nopol);
//                        p.setString(3, tgl_pinjaman);
//                        p.setString(4, tgl_kembali);
//                        p.setString(5, harga);
//                        p.setString(6, lama);
//                        p.setString(7, total);
//                        p.executeUpdate();
//                    
//                            
//                            JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
//                            cekstatus();
//                            add_peminjam();
//                    String kolom[] = {"peminjam", "nopol", "tgl_pinjaman", "tgl_kembali", "harga", "lama", "total"};
//                    java.util.Date tgl = (java.util.Date) this.jDateChooser1.getDate();
//                    java.util.Date tgl1 = (java.util.Date) this.jDateChooser2.getDate();
//
//                    String isi[] = {lblNama.getText(), boxnopol.getSelectedItem().toString(), new java.sql.Date(tgl.getTime()).toString(), new java.sql.Date(tgl1.getTime()).toString(), lbl_harga.getText(), txt_lama.getText(), txt_total.getText()};
//                    System.out.println("insert into tb_transaksi");
//
//                    JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
//                    cekstatus();
//                    add_peminjam();
//                }


//            } else {
//                JOptionPane.showMessageDialog(this, "Data isian ada yang kosong");
//            }
//        } catch (HeadlessException | SQLException e) {
//            JOptionPane.showMessageDialog(this, "Error input data");
//            System.out.println("salah");
//        }
//        loadTabel();
//        clear();
//    }
//
//    private void clear() {
//        txt_total.setText("");
//        txt_lama.setText("");
        // boxnopol.addItem(rs.getString("nopol"));
        //jDateChooser1.addNotify();
        //jDateChooser2.addNotify();
        }

//    public void cekstatus() throws SQLException {
//        rs = con.querySelectAll("tb_mobil", "nopol ='" + boxnopol.getSelectedItem().toString() + "'");
//        while (rs.next()) {
//            status1 = rs.getString("status");
//
//        }
//        String update_status = "Keluar";
//        String kolom[] = {"status"};
//        String isi[] = {update_status};
//        con.queryUpdate("tb_mobil", kolom, isi,//        try {
//
//            if (!lblNama.getText().isEmpty()) {
//
//                if (!jikakeluar()) {
//
//                    JOptionPane.showMessageDialog(this, "maaf mobil ini sedang tidak tersedia");
//                } else {
//                    java.util.Date tgl = (java.util.Date) this.jDateChooser1.getDate();
//                    java.util.Date tgl1 = (java.util.Date) this.jDateChooser2.getDate();
//                    String peminjam = lblNama.getText(); 
//                    String  nopol = boxnopol.getSelectedItem().toString();
//                    String tgl_pinjaman = new java.sql.Date(tgl.getTime()).toString();
//                    String tgl_kembali = new java.sql.Date(tgl1.getTime()).toString();
//                    String harga = lbl_harga.getText();
//                    String lama = txt_lama.getText();
//                    String total = txt_total.getText();
//         
//                    Connection c = KoneksiDatabase.getKoneksi();
//                    String sql = "INSERT INTO TB_TRANSAKSI VALUES (id_transaksi, ?, ?, ?, ?, ?, ?, ?)";
//                    PreparedStatement p = c.prepareStatement(sql);
//                        p.setString(1, peminjam);
//                        p.setString(2, nopol);
//                        p.setString(3, tgl_pinjaman);
//                        p.setString(4, tgl_kembali);
//                        p.setString(5, harga);
//                        p.setString(6, lama);
//                        p.setString(7, total);
//                        p.executeUpdate();
//                    
//                            
//                            JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
//                            cekstatus();
//                            add_peminjam();
//                    String kolom[] = {"peminjam", "nopol", "tgl_pinjaman", "tgl_kembali", "harga", "lama", "total"};
//                    java.util.Date tgl = (java.util.Date) this.jDateChooser1.getDate();
//                    java.util.Date tgl1 = (java.util.Date) this.jDateChooser2.getDate();
//
//                    String isi[] = {lblNama.getText(), boxnopol.getSelectedItem().toString(), new java.sql.Date(tgl.getTime()).toString(), new java.sql.Date(tgl1.getTime()).toString(), lbl_harga.getText(), txt_lama.getText(), txt_total.getText()};
//                    System.out.println("insert into tb_transaksi");
//
//                    JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
//                    cekstatus();
//                    add_peminjam();
//                }


//            } else {
//                JOptionPane.showMessageDialog(this, "Data isian ada yang kosong");
//            }
//        } catch (HeadlessException | SQLException e) {
//            JOptionPane.showMessageDialog(this, "Error input data");
//            System.out.println("salah");
//        }
//        loadTabel();
//        clear();
//    }
//
//    private void clear() {
//        txt_total.setText("");
//        txt_lama.setText("");
        // boxnopol.addItem(rs.getString("nopol"));
        //jDateChooser1.addNotify();
        //jDateChooser2.addNotify();
//        }
public void capekygy(){
    String nopol= lbl_merek.getText();
        try {
            Connection c = KoneksiDatabase.getKoneksi();
            String sql ="UPDATE tb_mobil SET status = 'Tersedia' WHERE nopol ='" + nopol + "'";
            
//            PreparedStatement pst = c.prepareStatement(sql);
 try (PreparedStatement p = c.prepareStatement(sql)) {
//        p.setString(1, status);
//        p.setString(2, nopol);
        p.executeUpdate();

//            pst.execute();
            JOptionPane.showMessageDialog(null, "Data berhasil diupdate");
 }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
        }
    }
//    int i = table_transaksi.getSelectedRow();
//        if(i == -1){
//        // tidak ada baris terseleksi
//        return;
//        }
//        // ambil nim yang terseleksi  
//        String merek = lbl_merek.getText();
//        String nopol = (String) model.getValueAt(i, 0);
//        try{
//        Connection c = KoneksiDatabase.getKoneksi();
//        String sql = "UPDATE TB_MOBIL SET STATUS = 'Tersedia' WHERE NOPOL = ?";
//    try (PreparedStatement p = c.prepareStatement(sql)) {
//        p.setString(1, merek);
//        p.setString(2, nopol);
//        p.executeUpdate();
//    }
//        }catch(SQLException e){
//        JOptionPane.showMessageDialog(this, "Data tidak sesuai");
//        }finally{
//        loadTabel();
//        }

    public void cekstatus() {
//        String status =lbl_status.getText();
//String status = "keluar";
        String nopol = boxnopol.getSelectedItem().toString();
        try {
            Connection c = KoneksiDatabase.getKoneksi();
            String sql ="UPDATE tb_mobil SET status = 'Keluar' WHERE nopol ='" + nopol + "'";
            
//            PreparedStatement pst = c.prepareStatement(sql);
 try (PreparedStatement p = c.prepareStatement(sql)) {
//        p.setString(1, status);
//        p.setString(2, nopol);
        p.executeUpdate();

//            pst.execute();
            JOptionPane.showMessageDialog(null, "Data berhasil diupdate");
 }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
        }
    }
//        rs = con.querySelectAll("tb_mobil", "nopol ='" + boxnopol.getSelectedItem().toString() + "'");
//        while (rs.next()) {
//            status1 = rs.getString("status");
//
//        }
//        String update_status = "Keluar";
//        String kolom[] = {"status"};
//        String isi[] = {update_status};
//         "nopol='" + boxnopol.getSelectedItem().toString() + "'");
        
//        String st = (String) boxnopol.getSelectedItem();
//        Connection c = KoneksiDatabase.getKoneksi();
//        Statement s = c.createStatement();
//        String sql = "SELECT * FROM TB_MOBIL WHERE NOPOL = '" + st + "'" ;
//        ResultSet rs = s.executeQuery(sql);
//        while (r.next()) {
//            status1 = rs.getString("status");
//        }
//        String ssql = "UPDATE TB_MOBIL SET STATUS = 'Keluar' WHERE NOPOL = '" + st + "'" ;
//        ResultSet rsa = s.executeQuery(ssql);
//        try {             
//            String st = boxnopol.getSelectedItem().toString();
//            Connection c = KoneksiDatabase.getKoneksi();
//            Statement s = c.createStatement();
//            jTextField1.setText(st);
//            String sql = "SELECT * FROM TB_MOBIL WHERE NOPOL = '" + st + "'" ;
//            ResultSet rs = s.executeQuery(sql);
//            while (r.next()) {
//                status1 = rs.getString("status");
//            }
//                    
//            String ssql = "UPDATE tb_mobil SET status = 'Keluar' WHERE id_mobil = '41'";
////            PreparedStatement h = c.prepareStatement(ssql);
////            ResultSet hh = s.executeQuery(ssql);
////            ssql = String.format(sql, status, nopol);
//
////            h.executeUpdate();
//
//            s.execute(ssql);
//        } catch (SQLException e)  {}
//    }

//    public boolean jikakeluar() throws SQLException {
//        boolean hasil;
////        String st = (String) boxnopol.getSelectedItem();
//        Connection c = KoneksiDatabase.getKoneksi();
//        Statement s = c.createStatement();
//        String sql = "SELECT * FROM TB_MOBIL WHERE NOPOL = '" +boxnopol.getSelectedItem().toString()+ "'";
//        ResultSet rs = s.executeQuery(sql);
//        
//        while (rs.next()) {
//            status1 = rs.getString("status");
//        }
//        if (!status1.equals("Keluar")){
//            hasil = false;
//        }else{
//            hasil = true;
//        }
//        return hasil;
//    }

    public void add_peminjam(){
        String peminjam = lblNama.getText();
        String niik = lblNik.getText();
        String alamatt = lbl_alamat.getText();
        String telp = lbl_tlp.getText();
        String emaill = lbl_email.getText();
        try{
        Connection c = KoneksiDatabase.getKoneksi();
        String sql = "INSERT INTO TB_PEMINJAM VALUES (id_peminjam, ?, ?, ?, ?, ?)";
            try (PreparedStatement p = c.prepareStatement(sql)) {
                p.setString(1, peminjam);
                p.setString(2, niik);
                p.setString(3, alamatt);
                p.setString(4, telp);
                p.setString(5, emaill);
                p.executeUpdate();
            }
                JOptionPane.showMessageDialog(this, "Data Peminjam Berhasil Disimpan");
        }catch(SQLException e)
        { 
            JOptionPane.showMessageDialog(this, "Data isian ada yang kosong");
        }
        
//        String kolom[] = {"nama", "alamat", "telp", "email"};
//        String isi[] = {lblNama.getText(), lbl_alamat.getText(), lbl_tlp.getText(), lbl_email.getText()};
//        System.out.println("insert into tb_peminjam");
//        JOptionPane.showMessageDialog(this, "Data Peminjam Berhasil Disimpan");
    }
}
